{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.bbfb374c85e9210982ad.hot-update.js","sources":["webpack:///./config/http.js","webpack:///./pages/_app.js"],"sourcesContent":["import axios from 'axios'; \r\nconst init=function(){\r\n    axios.interceptors.request.use(config => {\r\n        const token = localStorage.getItem('token');\r\n        console.log(token);\r\n        config.headers.common['Authorization'] = 'Bearer ' + token;\r\n        return config;\r\n    })\r\n}\r\nexport default {init}","\r\nimport React from 'react'\r\nimport App, { Container } from 'next/app'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport http from '../config/http'\r\n\r\nimport reducer from '../redux/index'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\nlet store = createStore(persistedReducer)\r\nlet persistor = persistStore(store);\r\n\r\nexport default class MyApp extends App {\r\n    render() {\r\n        const { Component, pageProps } = this.props\r\n        return <Container>\r\n            <Provider store={store}>\r\n                <PersistGate loading={null} persistor={persistor}>\r\n                        <Component {...pageProps} />\r\n                </PersistGate>\r\n\r\n            </Provider>\r\n        </Container>\r\n    }\r\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAXA;AACA;;;;;A","sourceRoot":""}