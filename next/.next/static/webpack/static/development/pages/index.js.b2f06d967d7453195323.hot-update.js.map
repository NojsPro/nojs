{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.b2f06d967d7453195323.hot-update.js","sources":["webpack:///./components/home/blog.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col, List, Avatar, Icon, Button } from 'antd';\r\n\r\nimport '../../static/css/app.css'\r\nimport Axios from 'axios';\r\nimport HOST from '../../config/host'\r\n\r\nconst host = HOST.host;\r\n\r\nconst IconText = ({ type, text }) => (\r\n    <span>\r\n        <Icon type={type} style={{ marginRight: 8 }} />\r\n        {text}\r\n    </span>\r\n);\r\n\r\nfunction sortTweet(value) {\r\n    console.log(value.indexOf('<p>'), value.indexOf('</p>'))\r\n    let data = value.substring(value.indexOf('<p>')+3, value.indexOf('</p>'))\r\n    console.log(data.replace(/<br>/g,\"/\"))\r\n    return data.substring(0, 60) + '...'\r\n}\r\n\r\n\r\nclass Blog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(host+'/public/new').then((res)=>{\r\n            console.log(res)\r\n            this.setState({\r\n                data: res.data\r\n            })\r\n            this.props.NoticeSussess('加载成功')\r\n        }).catch((err)=>{\r\n            this.props.NoticeError('服务器错误')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row gutter={15} className=\"blog\">\r\n                <Col sm={24} md={24} lg={16} xl={20}>\r\n                    <List\r\n                        itemLayout=\"vertical\"\r\n                        dataSource={this.state.data}\r\n                        header={<div className=\"header_list\">\r\n                            <a>最新</a>|\r\n                            <a type=\"link\">热门</a>\r\n\r\n                        </div>}\r\n                        // footer={\r\n                        //     <div>\r\n                        //         <b>ant design</b> footer part\r\n                        //     </div>\r\n                        // }\r\n                        renderItem={item => (\r\n                            <List.Item\r\n                                key={item.title}\r\n                                actions={[\r\n                                    <IconText type=\"star-o\" text={item.collect} />,\r\n                                    <IconText type=\"like-o\" text={item.awesime} />,\r\n                                    <IconText type=\"message\" text={item.comment} />,\r\n                                ]}\r\n                                extra={\r\n                                    <img\r\n                                        width={272}\r\n                                        alt=\"logo\"\r\n                                        src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                                    />\r\n                                }\r\n                            >\r\n                                <List.Item.Meta\r\n                                    title={<a href={'/content/'+item._id} style={{ fontSize: '24px' }}>{item.title}</a>}\r\n                                    description={'前端 React' + '  2019-6-9 14:00:31'}\r\n                                />\r\n                                    {/* {sortTweet(item.text)} */}\r\n                                    \r\n                                        \r\n                                    <div dangerouslySetInnerHTML={{ __html: sortTweet(item.text) }}  />  \r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </Col>\r\n                <Col xs={24} sm={24} md={24} lg={8} xl={4}>\r\n                    Col\r\n                </Col>\r\n                <style jsx>\r\n                {\r\n                    `\r\n                    \r\n                    `\r\n                }\r\n                </style>\r\n            </Row >\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return state\r\n}\r\n//需要触发什么行为\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        ToggleLogin: (user) => dispatch({ type: 'toggleAuth', user }),\r\n        LoginOut: () => dispatch({ type: 'loginOut' }),\r\n        NoticeSussess: (value) => dispatch({ type: 'success', value }),\r\n        NoticeError: (value) => dispatch({ type: 'error', value }),\r\n        NoticeWarning: (value) => dispatch({ type: 'warning', value }),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blog);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAZA;AAaA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3CA;AAAA;AAAA;AAuDA;;;;AA7EA;AACA;AA8EA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;;;;A","sourceRoot":""}