{"version":3,"file":"static/webpack/static\\development\\pages\\content.js.4379ed25807634fef5f6.hot-update.js","sources":["webpack:///./components/header/Navinfo.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Menu, Dropdown, Icon, Drawer, Input } from 'antd';\r\nimport Router from 'next/router'\r\n\r\nimport { connect } from 'react-redux'\r\nimport '../../static/css/app.css'\r\nimport Axios from 'axios';\r\n\r\n\r\nimport HOST from '../../config/host'\r\nconst host = HOST.host;\r\nlet { Search } = Input;\r\n\r\nconst menu = (\r\n    <Menu>\r\n        <Menu.Item key=\"0\">\r\n            <a href=\"http://www.alipay.com/\">1st menu item</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"1\">\r\n            <a href=\"http://www.taobao.com/\">2nd menu item</a>\r\n        </Menu.Item>\r\n        <Menu.Divider />\r\n        <Menu.Item key=\"3\" >退出登录</Menu.Item>\r\n    </Menu>\r\n);\r\n\r\n\r\nclass Navinfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: false,\r\n            drawer: false,\r\n            searchlist: [],\r\n            imageUrl:''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        if (this.props.auth) {\r\n            this.setState({\r\n                login: true,\r\n                imageUrl: this.props.user.imageUrl\r\n            })\r\n        }\r\n    }\r\n\r\n    LinkPages = (href) => {\r\n\r\n        Router.push(href)\r\n    }\r\n\r\n    onClose = (e) => {\r\n        this.setState({\r\n            drawer: false\r\n        })\r\n    }\r\n\r\n    showDrawer = (e) => {\r\n        this.setState({\r\n            drawer: true\r\n        })\r\n    }\r\n\r\n    writeTweets = ()=>{\r\n        Router.push('/write')\r\n    }\r\n    searchList = (e) => {\r\n        console.log(e)\r\n        Axios.get(host + '/public/search', {\r\n            params: {\r\n                keyword: e\r\n            }\r\n        })\r\n            .then((response)=> {\r\n                console.log(response);\r\n                this.setState({\r\n                    searchlist: response.data\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    loginout = e => {\r\n        this.props.LoginOut()\r\n        this.setState({\r\n            login: false\r\n        })\r\n\r\n    }\r\n    render() {\r\n        let { login } = this.state;\r\n        return (\r\n            <div className=\"navinfo\">\r\n                <Button shape=\"circle\" icon=\"search\" onClick={this.showDrawer} />\r\n                <Button><a href=\"/write\" target=\"_blank\">写推文</a></Button>\r\n                {\r\n                    login ? (<Dropdown overlay={(\r\n                        <Menu>\r\n                            <Menu.Item key=\"0\">\r\n                                <a href=\"/user/homepage\">用户主页</a>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"1\">\r\n                                <a href=\"/user/info\">资料修改</a>\r\n                            </Menu.Item>\r\n                            <Menu.Divider />\r\n                            <Menu.Item key=\"3\" onClick={this.loginout}>退出登录</Menu.Item>\r\n                        </Menu>\r\n                    )} trigger={['click']}>\r\n\r\n                        <img src=\"/static/img/123.jpg\" className=\"avater\" />\r\n                    </Dropdown>) : <div className=\"unlogin\">\r\n                            <Button type=\"link\" size={\"small\"} onClick={this.LinkPages.bind(this, '/login')}>\r\n                                登录\r\n                    </Button>\r\n                            <Button type=\"link\" size={\"small\"} onClick={this.LinkPages.bind(this, '/login')}>\r\n                                注册\r\n                    </Button>\r\n                        </div>\r\n                }\r\n\r\n                <Drawer\r\n                    title={<Search\r\n                        placeholder=\"搜索更多内容\"\r\n                        onSearch={this.searchList}\r\n                        style={{ width: 200 }}\r\n                    />}\r\n                    placement=\"bottom\"\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.drawer}\r\n                >\r\n                    {\r\n                        this.state.searchlist.map((value, i) => {\r\n                            return (<p key={i}><a href={'/content/' + value._id} target=\"_blank\" rel=\"noopener noreferrer\">{value.title}</a></p>)\r\n                        })\r\n                    }\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return state\r\n}\r\n//需要触发什么行为\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        ToggleLogin: (user) => dispatch({ type: 'toggleAuth', user }),\r\n        LoginOut: () => dispatch({ type: 'loginOut' })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navinfo);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsBA;AACA;AACA;AAxBA;AA0BA;AACA;AADA;AAGA;AACA;AA9BA;AAgCA;AACA;AADA;AAGA;AACA;AApCA;AAsCA;AACA;AACA;AAxCA;AAyCA;AACA;AACA;AACA;AADA;AADA;AAMA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAzDA;AA2DA;AACA;AAAA;AACA;AADA;AAIA;AACA;AA/DA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AA+CA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;;AApHA;AACA;AAsHA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;;;;A","sourceRoot":""}