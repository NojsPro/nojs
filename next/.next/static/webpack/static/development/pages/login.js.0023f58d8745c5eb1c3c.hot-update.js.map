{"version":3,"file":"static/webpack/static\\development\\pages\\login.js.0023f58d8745c5eb1c3c.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Input, Modal, Button, Form, Icon, Checkbox } from 'antd';\r\nimport '../static/css/app.css'\r\nclass login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: {\r\n                bottom: 20,\r\n                size: 16\r\n            },\r\n            password: {\r\n                bottom: 20,\r\n                size: 16\r\n            },\r\n            user: {\r\n                username: '',\r\n                password: ''\r\n            },\r\n            visible: false,\r\n            confirmLoading: false,\r\n        };\r\n    }\r\n    focusInput = (e) => {\r\n        if (e === 0) {\r\n            this.setState({\r\n                name: {\r\n                    bottom: 50,\r\n                    size: 12\r\n                }\r\n            })\r\n        } else {\r\n\r\n            this.setState({\r\n                password: {\r\n                    bottom: 50,\r\n                    size: 12\r\n                }\r\n            })\r\n        }\r\n    }\r\n    blurInput = (e) => {\r\n        let { user } = this.state;\r\n        if (e === 0 && user.username === '') {\r\n\r\n            this.setState({\r\n                name: {\r\n                    bottom: 20,\r\n                    size: 16\r\n                }\r\n            })\r\n        } else if (user.password === '') {\r\n\r\n            this.setState({\r\n                password: {\r\n                    bottom: 20,\r\n                    size: 16\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    changeInput = (name, e) => {\r\n        console.log(name, e.target.value);\r\n        let { user } = this.state;\r\n        user[name] = e.target.value;\r\n        this.setState({\r\n            user\r\n        })\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({\r\n            ModalText: 'The modal will be closed after two seconds',\r\n            confirmLoading: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                visible: false,\r\n                confirmLoading: false,\r\n            });\r\n        }, 2000);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    regHeader() {\r\n        return (\r\n            <div>\r\n                <h2>注册</h2>\r\n                <p>\r\n                    创建一个账号去加入我们\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n    checkPassword = e =>{\r\n        console.log(e.target.value)\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { visible, confirmLoading } = this.state;\r\n        return (\r\n            <Row type=\"flex\" justify=\"center\" align=\"middle\" className=\"login\">\r\n                <Col xs={20} sm={16} md={14} lg={12} xl={7}>\r\n\r\n                    <div className=\"login-box\">\r\n                        <div className=\"login-input\">\r\n                            <div className=\"login-logo\">\r\n                                <h2>LOGIN</h2>\r\n                            </div>\r\n                            <div className=\"input-box\">\r\n                                <label className=\"name-label\">账号</label>\r\n                                <Input allowClear defaultValue={this.state.user.username} onFocus={this.focusInput.bind(this, 0)} onBlur={this.blurInput.bind(this, 0)} onChange={this.changeInput.bind(this, 'username')} />\r\n                            </div>\r\n                            <div className=\"input-box\">\r\n                                <label className=\"pwd-label\" >密码</label>\r\n                                <Input.Password defaultValue={this.state.user.password} onFocus={this.focusInput.bind(this, 1)} onBlur={this.blurInput.bind(this, 1)} onChange={this.changeInput.bind(this, 'password')} />\r\n                            </div>\r\n                            <a href=\"#\" className=\"forget-pwd\">忘记密码？</a>\r\n                        </div>\r\n                        <div className=\"login-btn\">\r\n                            <button className=\"logon-btns\" onClick={this.showModal}>\r\n                                注册\r\n                            </button>\r\n                            <button className=\"login-btns\">\r\n                                登录\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <Modal\r\n                        title={<this.regHeader />}\r\n                        visible={visible}\r\n                        footer={null}\r\n                        width={\"400px\"}\r\n                        onCancel={this.handleCancel}\r\n                    >\r\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                            <Form.Item>\r\n                                {getFieldDecorator('email', {\r\n                                    rules: [{ required: true, message: '请输入您的邮箱' }],\r\n                                })(\r\n                                    <Input\r\n                                        type=\"email\"\r\n                                        prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"email\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('username', {\r\n                                    rules: [{ required: true, message: '请输入您的用户名' }],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Username\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [{ required: true, message: '请输入您的密码' }],\r\n                                })(\r\n                                    // <Input\r\n                                    //     prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    //     type=\"password\"\r\n                                    //     placeholder=\"Password\"\r\n                                    // />\r\n                                    <Input.Password placeholder=\"input password\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }}/>} />\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('check_password', {\r\n                                    rules: [{ required: true, message: '请再次输入您的密码' }],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        onChange={this.checkPassword}\r\n                                        placeholder=\"Password\"\r\n                                        style={{\r\n                                            borderColor: 'red'\r\n                                        }}\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item style={{textAlign: \"center\"}}>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                    注册\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                </Col>\r\n                <style jsx>\r\n                    {\r\n                        `\r\n                        .input-box .name-label{\r\n                            position: absolute;\r\n                            bottom: ${this.state.name.bottom}px;\r\n                            left: 10px;\r\n                            z-index: 10;\r\n                            font-size: ${this.state.name.size}px;\r\n                        }\r\n                        .input-box .pwd-label{\r\n                            position: absolute;\r\n                            bottom: ${this.state.password.bottom}px;\r\n                            left: 10px;\r\n                            z-index: 10;\r\n                            font-size: ${this.state.password.size}px;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'normal_login' })(login);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAoBA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AArCA;AAqCA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AAzDA;AA2DA;AADA;AAGA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAlEA;AAoEA;AACA;AADA;AAGA;AACA;AAxEA;AA0EA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AArFA;AAuFA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA5FA;AAwGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA/GA;AAgHA;AACA;AACA;AAhHA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AAdA;AAFA;AAkpFA;AAAA;AAAA;AAAA;AAiHA;;;;AAxOA;AACA;AA0OA;AAAA;AAAA;;;;A","sourceRoot":""}