{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.41b9cffa82cd793821b6.hot-update.js","sources":["webpack:///./components/home/blog.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col, List, Avatar, Icon } from 'antd';\r\n\r\n\r\nconst IconText = ({ type, text }) => (\r\n    <span>\r\n        <Icon type={type} style={{ marginRight: 8 }} />\r\n        {text}\r\n    </span>\r\n);\r\n\r\nclass Blog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [{\r\n                href: 'http://ant.design',\r\n                title: `ant design part`,\r\n                avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n                description:\r\n                    'Ant Design, a design language for background applications, is refined by Ant UED Team.',\r\n                content:\r\n                    'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\r\n            }]\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <Row gutter={15}>\r\n                <Col sm={24} md={24} lg={16} xl={20}>\r\n                    <List\r\n                        itemLayout=\"vertical\"\r\n                        size=\"large\"\r\n                        pagination={{\r\n                            onChange: page => {\r\n                                console.log(page);\r\n                            },\r\n                            pageSize: 3,\r\n                        }}\r\n                        dataSource={this.state.data}\r\n                        footer={\r\n                            <div>\r\n                                <b>ant design</b> footer part\r\n                            </div>\r\n                        }\r\n                        renderItem={item => (\r\n                            <List.Item\r\n                                key={item.title}\r\n                                actions={[\r\n                                    <IconText type=\"star-o\" text=\"156\" />,\r\n                                    <IconText type=\"like-o\" text=\"156\" />,\r\n                                    <IconText type=\"message\" text=\"2\" />,\r\n                                ]}\r\n                                extra={\r\n                                    <img\r\n                                        width={272}\r\n                                        alt=\"logo\"\r\n                                        src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                                    />\r\n                                }\r\n                            >\r\n                                <List.Item.Meta\r\n                                    avatar={<Avatar src={item.avatar} />}\r\n                                    title={<a href={item.href}>{item.title}</a>}\r\n                                    description={item.description}\r\n                                />\r\n                                {item.content}\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </Col>\r\n                <Col xs={24} sm={24} md={24} lg={8} xl={4}>\r\n                    Col\r\n                </Col>\r\n            </Row >\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return state\r\n}\r\n//需要触发什么行为\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        ToggleLogin: (user) => dispatch({ type: 'toggleAuth', user }),\r\n        LoginOut: () => dispatch({ type: 'loginOut' }),\r\n        NoticeSussess: (value) => dispatch({ type: 'success', value }),\r\n        NoticeError: (value) => dispatch({ type: 'error', value }),\r\n        NoticeWarning: (value) => dispatch({ type: 'warning', value }),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blog);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAMA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AANA;AADA;AAFA;AAaA;AACA;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAjEA;AACA;AAkEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;;;;A","sourceRoot":""}